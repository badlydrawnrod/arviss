name: Examples

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_windows:
    name: Build examples
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install scoop, Ninja and LLVM
        shell: powershell
        run: |
          iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
          scoop install ninja
          scoop install llvm

      - name: Configure CMake for hello world example
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        shell: cmd
        working-directory: examples/hello_world/arviss
        run: |
          cmake -G Ninja -B build "-DCMAKE_C_COMPILER=clang" "-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}"

      - name: Build hello world example
        # Build your program with the given configuration
        shell: cmd
        working-directory: examples/hello_world/arviss
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Configure CMake for turtles example
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        shell: cmd
        working-directory: examples/turtles/arviss
        run: |
          cmake -G Ninja -B build "-DCMAKE_C_COMPILER=clang" "-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}"

      - name: Build turtles example
        # Build your program with the given configuration
        shell: cmd
        working-directory: examples/turtles/arviss
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Configure CMake for Very Angry Robots example
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        shell: cmd
        working-directory: examples/very_angry_robots/arviss
        run: |
          cmake -G Ninja -B build "-DCMAKE_C_COMPILER=clang" "-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}"

      - name: Build Very Angry Robots example
        # Build your program with the given configuration
        shell: cmd
        working-directory: examples/very_angry_robots/arviss
        run: cmake --build build --config ${{env.BUILD_TYPE}}
